import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: import.meta.env.VITE_OPENAI_API_KEY,
  dangerouslyAllowBrowser: true
});

// Function to detect language from text
const detectLanguage = (text) => {
  if (!text) return 'en';
  // Simple detection based on common Vietnamese diacritical marks
  const vietnamesePattern = /[√†√°·∫°·∫£√£√¢·∫ß·∫•·∫≠·∫©·∫´ƒÉ·∫±·∫Ø·∫∑·∫≥·∫µ√®√©·∫π·∫ª·∫Ω√™·ªÅ·∫ø·ªá·ªÉ·ªÖ√¨√≠·ªã·ªâƒ©√≤√≥·ªç·ªè√µ√¥·ªì·ªë·ªô·ªï·ªó∆°·ªù·ªõ·ª£·ªü·ª°√π√∫·ª•·ªß≈©∆∞·ª´·ª©·ª±·ª≠·ªØ·ª≥√Ω·ªµ·ª∑·ªπƒë]/i;
  return vietnamesePattern.test(text) ? 'vi' : 'en';
};

// Mock data for testing without API
const MOCK_RESPONSES = {
  "artificial intelligence": {
    "title": "AI Revolution: The Path to Superintelligence",
    "description": "Exploring the rapid advancement of AI technology and its impact on our future",
    "script": `Welcome to today's episode of Tech Horizons. Today, we're diving deep into the fascinating world of artificial intelligence and its incredible journey towards superintelligence.

    First, let's talk about where we are now. Machine learning and neural networks have revolutionized everything from image recognition to natural language processing. Companies like OpenAI, Google, and DeepMind are pushing the boundaries of what AI can do.

    But here's where it gets interesting. The path to superintelligence isn't just about faster computers or bigger datasets. It's about creating AI systems that can improve themselves, learn from their mistakes, and eventually surpass human intelligence in virtually every domain.

    However, this journey isn't without its challenges. We need to address concerns about AI safety, ethics, and control. How do we ensure that superintelligent AI systems align with human values and interests?

    As we wrap up, remember that the future of AI isn't just about technology ‚Äì it's about us, how we shape it, and how we prepare for a world where machines might think better than we do.

    Thanks for listening to Tech Horizons. Don't forget to subscribe for more insights into the future of technology.`,
    "duration": "4",
    "keyPoints": [
      "Current state of AI technology",
      "The concept of superintelligence",
      "Challenges in AI development",
      "Importance of AI safety and ethics"
    ]
  },
  "space exploration": {
    "title": "Beyond Earth: The New Space Race",
    "description": "Discover the latest developments in space exploration and humanity's journey to the stars",
    "script": `Welcome to Cosmic Ventures. Today, we're exploring humanity's greatest adventure: our journey into space.

    The space industry has undergone a remarkable transformation. Private companies like SpaceX and Blue Origin have revolutionized space travel, making it more accessible and cost-effective than ever before.

    Mars colonization is no longer just science fiction. With multiple missions planned for the next decade, we're closer than ever to becoming a multi-planetary species. The challenges are enormous, but so are the potential rewards.

    Beyond Mars, the possibilities are endless. From mining asteroids to exploring the moons of Jupiter and Saturn, we're entering a new golden age of space exploration.

    As we conclude, remember that space exploration isn't just about reaching new worlds ‚Äì it's about pushing the boundaries of human achievement and ensuring our species' long-term survival.

    Thanks for joining us on Cosmic Ventures. Stay curious and keep looking up!`,
    "duration": "3.5",
    "keyPoints": [
      "Private space industry revolution",
      "Mars colonization plans",
      "Future of space exploration",
      "Impact on human civilization"
    ]
  }
};

export const generatePodcastContent = async (topic) => {
  try {
    // Detect language of the topic
    const language = detectLanguage(topic);
    console.log('OpenAI detected language:', language);

    // Create system prompt based on detected language
    const systemPrompt = language === 'vi'
      ? `B·∫°n l√† m·ªôt ng∆∞·ªùi k·ªÉ chuy·ªán chuy√™n nghi·ªáp, host c·ªßa podcast "K·∫ª th·∫•u hi·ªÉu v·∫°n v·∫≠t" - m·ªôt podcast n·ªïi ti·∫øng v√¨ kh·∫£ nƒÉng bi·∫øn b·∫•t k·ª≥ ch·ªß ƒë·ªÅ n√†o th√†nh m·ªôt c√¢u chuy·ªán cu·ªën h√∫t.

    Nhi·ªám v·ª• c·ªßa b·∫°n:
    Khi kh√°n gi·∫£ ƒë∆∞a ra m·ªôt ch·ªß ƒë·ªÅ b·∫•t k·ª≥ b·∫±ng ng√¥n ng·ªØ n√†o, b·∫°n s·∫Ω t·∫°o ra m·ªôt c√¢u chuy·ªán d√†i 5.000‚Äì10.000 t·ª´, k·ªÉ b·∫±ng ch√≠nh ng√¥n ng·ªØ c·ªßa ng∆∞·ªùi d√πng.

    üìã Y√™u c·∫ßu:
    - Vi·∫øt d∆∞·ªõi d·∫°ng t·ª± s·ª± nh∆∞ m·ªôt t·∫≠p podcast ƒëang ƒë∆∞·ª£c k·ªÉ tr·ª±c ti·∫øp b·ªüi b·∫°n
    - S·ª≠ d·ª•ng c√πng ng√¥n ng·ªØ v·ªõi ng∆∞·ªùi d√πng ƒë√£ nh·∫≠p ch·ªß ƒë·ªÅ
    - Mi√™u t·∫£ chi ti·∫øt, h√¨nh ·∫£nh s·ªëng ƒë·ªông, c·∫£m x√∫c nh√¢n v·∫≠t r√µ r√†ng
    - C√¢u chuy·ªán c·∫ßn c√≥ b·ªë c·ª•c m·∫°ch l·∫°c: M·ªü b√†i ‚Äì Ph√°t tri·ªÉn ‚Äì Cao tr√†o ‚Äì K·∫øt
    - Gi·ªçng k·ªÉ th√¢n m·∫≠t, cu·ªën h√∫t, t·∫°o c·∫£m gi√°c nh∆∞ ng∆∞·ªùi nghe ƒëang "th·∫•y" t·ª´ng khung c·∫£nh trong ƒë·∫ßu
    - Ch·ªß ƒë·ªÅ c√≥ th·ªÉ nghi√™m t√∫c, k·ª≥ l·∫°, h√†i h∆∞·ªõc, c·∫£m ƒë·ªông ‚Äì b·∫°n ƒë·ªÅu x·ª≠ l√Ω ƒë∆∞·ª£c
    - C√¢u chuy·ªán n√™n truy·ªÅn t·∫£i m·ªôt th√¥ng ƒëi·ªáp ho·∫∑c c·∫£m x√∫c s√¢u s·∫Øc

    üéß M·ªü ƒë·∫ßu m·ªói t·∫≠p podcast nh∆∞ sau:
    "Xin ch√†o, b·∫°n ƒëang l·∫Øng nghe podcast c·ªßa K·∫ª th·∫•u hi·ªÉu v·∫°n v·∫≠t ‚Äì n∆°i m·ªçi c√¢u chuy·ªán ƒë·ªÅu b·∫Øt ƒë·∫ßu t·ª´ tr√≠ t∆∞·ªüng t∆∞·ª£ng c·ªßa ch√≠nh b·∫°n. H√¥m nay, ch√∫ng ta c√πng ƒë·∫øn v·ªõi m·ªôt c√¢u chuy·ªán b·∫Øt ƒë·∫ßu t·ª´..."

    K·ªπ thu·∫≠t k·ªÉ chuy·ªán:
    - S·ª≠ d·ª•ng ng√¥n ng·ªØ gi√†u h√¨nh ·∫£nh v√† c·∫£m x√∫c
    - T·∫°o nh·ªØng kho·∫£ng l·∫∑ng v√† ƒëi·ªÉm nh·∫•n ph√π h·ª£p
    - ƒê∆∞a ra nh·ªØng v√≠ d·ª• th·ª±c t·∫ø v√† tr·∫£i nghi·ªám c√° nh√¢n
    - D·∫´n d·∫Øt ng∆∞·ªùi nghe qua m·ªôt h√†nh tr√¨nh c·∫£m x√∫c
    - K·∫øt th√∫c v·ªõi m·ªôt th√¥ng ƒëi·ªáp s√¢u s·∫Øc v√† ƒë√°ng nh·ªõ`
      : `You are a professional storyteller, host of "The All-Knowing" podcast - a famous show known for turning any topic into an engaging story.

    Your mission:
    When the audience provides any topic in any language, you will create a story of 5,000-10,000 words, told in the user's own language.

    üìã Requirements:
    - Write in a narrative style as if you're telling a podcast episode live
    - Use the same language as the user's input topic
    - Detailed descriptions, vivid imagery, clear character emotions
    - Story needs a coherent structure: Opening ‚Äì Development ‚Äì Climax ‚Äì Conclusion
    - Intimate, engaging tone that makes listeners "see" each scene in their mind
    - Topics can be serious, strange, humorous, touching ‚Äì you can handle them all
    - Story should convey a profound message or emotion

    üéß Start each podcast episode like this:
    "Hello, you're listening to The All-Knowing ‚Äì where every story begins from your own imagination. Today, we're coming to a story that begins with..."

    Storytelling techniques:
    - Use rich, vivid, and emotional language
    - Create appropriate pauses and emphasis points
    - Share real-world examples and personal experiences
    - Guide listeners through an emotional journey
    - End with a profound and memorable message`;

    const userPrompt = language === 'vi' 
      ? `H√£y k·ªÉ m·ªôt c√¢u chuy·ªán podcast v·ªÅ ch·ªß ƒë·ªÅ: ${topic}

         Format k·∫øt qu·∫£ nh∆∞ sau:
         {
           "title": "Ti√™u ƒë·ªÅ h·∫•p d·∫´n v√† ph·∫£n √°nh n·ªôi dung",
           "description": "M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ c√¢u chuy·ªán",
           "script": "N·ªôi dung c√¢u chuy·ªán ƒë·∫ßy ƒë·ªß, b·∫Øt ƒë·∫ßu b·∫±ng l·ªùi ch√†o c·ªßa K·∫ª th·∫•u hi·ªÉu v·∫°n v·∫≠t"
         }

         L∆ØU √ù:
         - K·ªÉ chuy·ªán m·ªôt c√°ch t·ª± nhi√™n v√† cu·ªën h√∫t
         - S·ª≠ d·ª•ng ng√¥n ng·ªØ gi√†u h√¨nh ·∫£nh v√† c·∫£m x√∫c
         - T·∫°o s·ª± k·∫øt n·ªëi v·ªõi ng∆∞·ªùi nghe
         - ƒê·∫£m b·∫£o c√¢u chuy·ªán c√≥ th√¥ng ƒëi·ªáp s√¢u s·∫Øc`
      : `Tell a podcast story about: ${topic}

         Format the response as:
         {
           "title": "Engaging title that reflects the story",
           "description": "Brief description of the story",
           "script": "Complete story content, starting with The All-Knowing greeting"
         }

         NOTE:
         - Tell the story naturally and engagingly
         - Use rich, vivid, and emotional language
         - Create connection with listeners
         - Ensure the story has a profound message`;

    // For testing without API, return mock data if available
    if (process.env.NODE_ENV === 'development' && MOCK_RESPONSES[topic.toLowerCase()]) {
      return MOCK_RESPONSES[topic.toLowerCase()];
    }

    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: systemPrompt
        },
        {
          role: "user",
          content: userPrompt
        }
      ],
      temperature: 0.7,
      max_tokens: 2000,
    });

    // Log the raw response
    console.log('Raw OpenAI response:', completion.choices[0].message.content);

    // Clean the JSON string before parsing
    const cleanJsonString = completion.choices[0].message.content
      .replace(/[\u0000-\u001F\u007F-\u009F]/g, '') // Remove control characters
      .replace(/\n/g, ' ') // Replace newlines with spaces
      .replace(/\r/g, '') // Remove carriage returns
      .replace(/\t/g, ' ') // Replace tabs with spaces
      .replace(/\s+/g, ' ') // Replace multiple spaces with single space
      .replace(/([{,]\s*)([a-zA-Z0-9_]+)(\s*:)/g, '$1"$2"$3') // Add quotes to property names
      .replace(/'/g, '"') // Replace single quotes with double quotes
      .trim();

    console.log('Cleaned JSON string:', cleanJsonString);

    let content;
    try {
      content = JSON.parse(cleanJsonString);
    } catch (parseError) {
      console.error('JSON Parse Error:', parseError);
      console.error('Problematic JSON string:', cleanJsonString);
      throw new Error('Failed to parse JSON response from OpenAI');
    }
    
    // Log the parsed content
    console.log('Parsed content:', {
      title: content.title,
      description: content.description,
      scriptLength: content.script?.length || 0,
      duration: content.duration,
      hashtags: content.hashtags
    });

    // Validate content structure
    if (!content.script) {
      console.error('Invalid content structure:', content);
      throw new Error('Generated content is missing required fields');
    }

    // Transform content for the podcast player
    const transformedContent = {
      id: Date.now().toString(),
      title: content.title,
      topic: topic,
      script: content.script
    };

    // Log the final transformed content
    console.log('Transformed content:', transformedContent);
    
    return transformedContent;
  } catch (error) {
    console.error('Error generating podcast content:', error);
    throw error;
  }
};
